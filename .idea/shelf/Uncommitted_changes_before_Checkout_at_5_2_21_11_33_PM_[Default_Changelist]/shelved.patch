Index: app/src/main/java/com/example/miapr/RegistrarDatosMedidor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.miapr;\n\nimport android.content.Intent;\nimport android.graphics.Color;\nimport android.graphics.Typeface;\nimport android.os.Bundle;\nimport android.text.TextUtils;\nimport android.text.TextWatcher;\nimport android.util.Log;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.TextView;\nimport android.widget.Toast;\n\nimport androidx.annotation.Nullable;\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport com.google.zxing.integration.android.IntentIntegrator;\nimport com.google.zxing.integration.android.IntentResult;\n\nimport java.text.SimpleDateFormat;\nimport java.time.LocalDate;\nimport java.util.Calendar;\nimport java.util.Date;\nimport java.util.Locale;\n\n\npublic class RegistrarDatosMedidor extends AppCompatActivity {\n\n    Button btCapturaQr, btregistrar;\n    EditText etNumMedidor, etNumLectura;\n    TextView tvValidar, tvLectAnt;\n\n\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_registrar_datos_medidor);\n\n        btCapturaQr= findViewById(R.id.btImportar);\n        btCapturaQr= findViewById(R.id.btRegistrar);\n        etNumMedidor= findViewById(R.id.etNumMedidor);\n        etNumLectura= findViewById(R.id.etNumLectura);\n        tvValidar= findViewById(R.id.tvValidacion);\n        tvLectAnt=findViewById(R.id.tvLectAnt);\n\n        etNumLectura.setOnFocusChangeListener(new View.OnFocusChangeListener() {\n            @Override\n            public void onFocusChange(View v, boolean hasFocus) {\n                if(hasFocus)\n                {\n                    if(!validadorLargoString(etNumMedidor.getText().toString())){\n                        etNumMedidor.setText(\"Error\");\n                        tvValidar.setText(\"El largo del número exede el máximo permitido\");\n                        tvValidar.setTypeface(tvValidar.getTypeface(), Typeface.BOLD);\n                        tvValidar.setTextColor(Color.RED);\n                    }else if(!validadorCaractersString(etNumMedidor.getText().toString())) {\n                        etNumMedidor.setText(\"Error\");\n                        tvValidar.setText(\"El código capturado no corresponde a un número de medior\");\n                        tvValidar.setTypeface(tvValidar.getTypeface(), Typeface.BOLD);\n                        tvValidar.setTextColor(Color.RED);\n                    }else if(!validadorExistenciaMedidor(etNumMedidor.getText().toString())) {\n                        etNumMedidor.setText(\"Error\");\n                        tvValidar.setText(\"No existe en base de datos\");\n                        tvValidar.setTypeface(tvValidar.getTypeface(), Typeface.BOLD);\n                        tvValidar.setTextColor(Color.RED);\n                    }else if (etNumMedidor.getText().toString().equals(\"\")){\n                        etNumMedidor.setText(\"Error\");\n                        tvValidar.setText(\"Ingrese o capture número de medidor\");\n                        tvValidar.setTypeface(tvValidar.getTypeface(), Typeface.BOLD);\n                        tvValidar.setTextColor(Color.RED);\n                    }else {\n                        etNumMedidor.setText(etNumMedidor.getText().toString());\n                        tvValidar.setText(\"Código correcto\");\n                        tvValidar.setTypeface(tvValidar.getTypeface(), Typeface.BOLD);\n                        tvValidar.setTextColor(Color.BLUE);\n                    }\n                    DatabaseAccess databaseAccess = DatabaseAccess.getInstance(getApplicationContext());\n                    databaseAccess.open();\n                    String medidor = etNumMedidor.getText().toString();\n                    String lecturaAnterior = databaseAccess.getLecturaAnterior(medidor);\n                    if(lecturaAnterior.equals(\"0\")){\n                        tvLectAnt.setText(\"ATENCIÓN!!, Este medidor no tiene lectura anterior.\");\n                        tvLectAnt.setTypeface(tvValidar.getTypeface(), Typeface.BOLD);\n                        tvLectAnt.setTextColor(Color.RED);\n                    }else{\n                        tvLectAnt.setText(\"Lectura anterior: \"+lecturaAnterior);\n                        //tvLectAnt.setTextColor(Color.);\n                        tvLectAnt.setTextColor(Color.parseColor(\"#f1b434\"));\n                    }\n\n                }\n                else{\n                    // Do something when Focus is not on the EditText\n                }\n            }\n        });\n\n        etNumMedidor.setOnFocusChangeListener(new View.OnFocusChangeListener() {\n            @Override\n            public void onFocusChange(View v, boolean hasFocus) {\n                if(hasFocus)\n                {\n                    etNumMedidor.setText(\"\");\n\n                }\n                else{\n                    // Do something when Focus is not on the EditText\n                }\n            }\n        });\n\n        //test();\n        testInsertarCobro();\n\n    }\n\n    public void escanearNumeroMedidor(View view){\n\n        IntentIntegrator intent = new IntentIntegrator(this);\n        intent.setDesiredBarcodeFormats(IntentIntegrator.ALL_CODE_TYPES);\n        intent.setPrompt(\"Escanear Codigo\");\n        intent.setCameraId(0);\n        intent.setOrientationLocked(true);\n        intent.setBeepEnabled(false);\n        intent.setCaptureActivity(Capturar.class);\n        intent.setBarcodeImageEnabled(false);\n        intent.initiateScan();\n\n\n    }\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\n        final IntentResult result = IntentIntegrator.parseActivityResult(requestCode, resultCode, data);\n\n        if (result != null){\n            if (result.getContents()== null){\n                Toast.makeText(this, \"Cancelaste escaneo\", Toast.LENGTH_SHORT).show();\n            }else {\n\n                if(!validadorLargoString(result.getContents())){\n                    etNumMedidor.setText(\"Error\");\n                    tvValidar.setText(\"El largo del número exede el máximo permitido\");\n                    tvValidar.setTypeface(tvValidar.getTypeface(), Typeface.BOLD);\n                    tvValidar.setTextColor(Color.RED);\n                }else if(!validadorCaractersString(result.getContents())) {\n                    etNumMedidor.setText(\"Error\");\n                    tvValidar.setText(\"El código capturado no corresponde a un número de medior\");\n                    tvValidar.setTypeface(tvValidar.getTypeface(), Typeface.BOLD);\n                    tvValidar.setTextColor(Color.RED);\n                }else if(!validadorExistenciaMedidor(result.getContents())){\n                    etNumMedidor.setText(\"Error\");\n                    tvValidar.setText(\"No existe en base de datos\");\n                    tvValidar.setTypeface(tvValidar.getTypeface(), Typeface.BOLD);\n                    tvValidar.setTextColor(Color.RED);\n                }else {\n                    etNumMedidor.setText(result.getContents());\n                    tvValidar.setText(\"Código correcto\");\n                    tvValidar.setTypeface(tvValidar.getTypeface(), Typeface.BOLD);\n                    tvValidar.setTextColor(Color.BLUE);\n                }\n\n                super.onActivityResult(requestCode, resultCode, data);\n            }\n        }\n    }\n\n    private Boolean validadorEdicionMedidor(final String result){\n\n\n                    if(!validadorLargoString(result)){\n                        etNumMedidor.setText(\"Error\");\n                        tvValidar.setText(\"El largo del número exede el máximo permitido\");\n                        tvValidar.setTypeface(tvValidar.getTypeface(), Typeface.BOLD);\n                        tvValidar.setTextColor(Color.RED);\n                        return false;\n                    }else if(!validadorCaractersString(result)) {\n                        etNumMedidor.setText(\"Error\");\n                        tvValidar.setText(\"El código capturado no corresponde a un número de medior\");\n                        tvValidar.setTypeface(tvValidar.getTypeface(), Typeface.BOLD);\n                        tvValidar.setTextColor(Color.RED);\n                        return false;\n\n                    }else if(!validadorExistenciaMedidor(result)){\n                        etNumMedidor.setText(\"Error\");\n                        tvValidar.setText(\"No existe en base de datos\");\n                        tvValidar.setTypeface(tvValidar.getTypeface(), Typeface.BOLD);\n                        tvValidar.setTextColor(Color.RED);\n                        return false;\n\n                    }else {\n                        etNumMedidor.setText(result);\n                        tvValidar.setText(\"Código correcto\");\n                        tvValidar.setTypeface(tvValidar.getTypeface(), Typeface.BOLD);\n                        tvValidar.setTextColor(Color.BLUE);\n                        return true;\n\n                    }\n\n    }\n    private boolean validadorLargoString(String str){ //comprueba que el largo del string sea no mas de 15 caractéres, para evitar denegación de servicio.\n        if(str.length() > 15){\n            return false;\n        }else {\n            return true;\n        }\n    }\n\n    private boolean validadorCaractersString(String str){\n        Boolean flag=true;\n        String num=\"1234567890\";\n        for(int i=0; i< str.length(); i++){\n            if(num.indexOf(str.charAt(i)) < 0){ //recorre la cadena capturada y verifica que cada caracter se encuentre en la cadena de números\n                flag=false;\n                break;\n            }\n        }\n        return flag;\n    }\n    private boolean validadorExistenciaMedidor(String medidor){\n        DatabaseAccess databaseAccess = DatabaseAccess.getInstance(getApplicationContext());\n        databaseAccess.open();\n        String response= databaseAccess.getNumMedidor(medidor);\n        String lecturaAnterior = databaseAccess.getLecturaAnterior(medidor);\n\n        tvLectAnt.setText(\"Lectura anterior:\"+lecturaAnterior);\n\n        if(response.equals(medidor)){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    public void registrarLectura(View view){\n\n        String NumMedidor = etNumMedidor.getText().toString();\n        String NumLectura = etNumLectura.getText().toString();\n        DatabaseAccess databaseAccess = DatabaseAccess.getInstance(getApplicationContext());\n        databaseAccess.open();\n\n        if(TextUtils.isEmpty(NumLectura) || TextUtils.isEmpty(NumMedidor)){\n            tvValidar.setText(\"Debes completar los campos\");\n            tvValidar.setTypeface(tvValidar.getTypeface(), Typeface.BOLD);\n            tvValidar.setTextColor(Color.RED);\n        }else{\n\n            String lecturaAnterior = databaseAccess.getLecturaAnterior(NumMedidor);\n\n            //Toast.makeText(this, \"Lectura anterior:::\"+lecturaAnterior, Toast.LENGTH_SHORT).show();\n            int lecAnt=Integer.parseInt(lecturaAnterior);\n\n            String [] datosCobros = databaseAccess.getDatosCobros();\n\n            String cargoFijo= datosCobros[0];\n            String metrosSubsidio= datosCobros[1];\n            String valorMetro= datosCobros[2];\n\n            int cargo_fijo = Integer.parseInt(cargoFijo);\n            int metros_sub = Integer.parseInt(metrosSubsidio);\n            int valor_metro = Integer.parseInt(valorMetro);\n\n\n            int subsidioMayor = cargo_fijo +  (metros_sub * 400); //8500\n            int subsidioMenor = subsidioMayor / 2;//4250\n\n\n            Date c = Calendar.getInstance().getTime();\n            System.out.println(\"Current time => \" + c);\n\n            SimpleDateFormat df = new SimpleDateFormat(\"yyyy-MM-dd\", Locale.getDefault());\n            String formattedDate = df.format(c);\n\n            // Toast.makeText(this,formattedDate , Toast.LENGTH_SHORT).show();\n            //Toast.makeText(this, \"Lectura anterior:::\"+lecturaAnterior, Toast.LENGTH_SHORT).show();\n            //Toast.makeText(this, \"cargoFijo:::\"+datosCobros[0]+\" metrosSubsidio:::\"+datosCobros[1], Toast.LENGTH_SHORT).show();\n\n\n\n            if(validadorEdicionMedidor(NumMedidor)){ // validacion de registro final\n                databaseAccess.insertarLectura(NumLectura, NumMedidor);\n                databaseAccess.insertarFecha(formattedDate, NumMedidor);\n                Log.i(\"subs33\", NumMedidor);\n\n                String subsidio = databaseAccess.getSubsidioLecturas(NumMedidor);\n                Log.i(\"subs332\", subsidio);\n                int subsidioD = Integer.parseInt(subsidio);\n                int lecturaActual = Integer.parseInt(NumLectura);\n                int metrosCubicos = lecturaActual - lecAnt;\n                String metrosC = String.valueOf(metrosCubicos);\n                databaseAccess.insertarMetrosC(metrosCubicos, NumMedidor);\n\n                Intent i = new Intent(this, Imprimir.class);\n\n                if(validadorLectura(lecturaActual, lecAnt )){\n                    tvValidar.setText(\"Lectura anteriror es mayor que la actual\");\n                    tvValidar.setTypeface(tvValidar.getTypeface(), Typeface.BOLD);\n                    tvValidar.setTextColor(Color.RED);\n\n                } else if(subsidioD == 10){\n                    if(metrosCubicos<=metros_sub){\n                        int cobro = (metrosCubicos * valor_metro + cargo_fijo)/2;\n                        if(cobro < 0){\n                            cobro =0;\n                            i.putExtra(\"cobro\", cobro);\n                            databaseAccess.insertarCobro(cobro, NumMedidor);\n                        }else{\n                            databaseAccess.insertarCobro(cobro, NumMedidor);\n                            i.putExtra(\"cobro\", String.valueOf(cobro));\n                        }\n                    }else {\n                        int cobro = (metrosCubicos * valor_metro + cargo_fijo)-subsidioMenor;\n                        if(cobro < 0){\n                            cobro =0;\n                            databaseAccess.insertarCobro(cobro, NumMedidor);\n                            i.putExtra(\"cobro\", String.valueOf(cobro));\n                        }else{\n                            databaseAccess.insertarCobro(cobro, NumMedidor);\n                            i.putExtra(\"cobro\", String.valueOf(cobro));\n                        }\n\n                    }\n\n                    // etNumLectura.setText(\"\");\n                    //etNumMedidor.setText(\"\");\n                    //tvValidar.setText(\"\");\n                    //tvLectAnt.setText(\"\");\n                    Toast.makeText(this, \"Registro de lectura exitoso 1\", Toast.LENGTH_LONG).show();\n\n\n                    i.putExtra(\"medidor\", NumMedidor);\n                    i.putExtra(\"lectura\", NumLectura);\n                    i.putExtra(\"metrosC\", metrosC);\n                    i.putExtra(\"subsidio\", subsidio);\n                    i.putExtra(\"fecha\", formattedDate);\n                    startActivity(i);\n\n                }else if(subsidioD == 20){\n\n                    int cobro = (metrosCubicos * valor_metro + cargo_fijo) - subsidioMayor;\n\n                    if(cobro < 0){\n                        cobro =0;\n                        databaseAccess.insertarCobro(cobro, NumMedidor);\n                        i.putExtra(\"cobro\", String.valueOf(cobro));\n                    }else {\n                        databaseAccess.insertarCobro(cobro, NumMedidor);\n                        i.putExtra(\"cobro\", String.valueOf(cobro));\n\n                    }\n                    // etNumLectura.setText(\"\");\n                    //etNumMedidor.setText(\"\");\n                    //tvValidar.setText(\"\");\n                    //tvLectAnt.setText(\"\");\n                    Toast.makeText(this, \"Registro de lectura exitoso 2\", Toast.LENGTH_LONG).show();\n\n                    i.putExtra(\"medidor\", NumMedidor);\n                    i.putExtra(\"lectura\", NumLectura);\n                    i.putExtra(\"metrosC\", metrosC);\n                    i.putExtra(\"subsidio\", subsidio);\n                    i.putExtra(\"fecha\", formattedDate);\n                    startActivity(i);\n                }else{\n                    int cobro = metrosCubicos * valor_metro + cargo_fijo;\n\n                    databaseAccess.insertarCobro(cobro, NumMedidor);\n                   // etNumLectura.setText(\"\");\n                    //etNumMedidor.setText(\"\");\n                    //tvValidar.setText(\"\");\n                    //tvLectAnt.setText(\"\");\n                    Toast.makeText(this, \"Registro de lectura exitoso 3\", Toast.LENGTH_LONG).show();\n\n                    i.putExtra(\"medidor\", NumMedidor);\n                    i.putExtra(\"lectura\", NumLectura);\n                    i.putExtra(\"metrosC\", metrosC);\n                    i.putExtra(\"cobro\", String.valueOf(cobro));\n                    i.putExtra(\"subsidio\", subsidio);\n                    i.putExtra(\"fecha\", formattedDate);\n\n                    startActivity(i);\n                }\n\n            }else {\n                Toast.makeText(this, \"Datos incorrectos para realizar el registro\", Toast.LENGTH_SHORT).show();\n            }\n\n\n\n        }\n\n\n    }\n\n    public boolean validadorLectura(int lecturaActual, int lecAnt ) {\n        if (lecturaActual < lecAnt) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    public void prueba(){\n        DatabaseAccess databaseAccess = DatabaseAccess.getInstance(getApplicationContext());\n        databaseAccess.open();\n        int num=1;\n        while (num <= 4) {\n            String[] registroLecturas = databaseAccess.pruebas(num);\n            Toast.makeText(this, registroLecturas[0]+\"-\"+registroLecturas[1]+\"-\"+registroLecturas[2]+\"-\"+registroLecturas[3]+\"-\"+registroLecturas[4]+\"-\"+registroLecturas[5], Toast.LENGTH_SHORT).show();\n            //Toast.makeText(this, \"medidor: \"+registroLecturas[0]+\"lectura :\"+registroLecturas[1], Toast.LENGTH_SHORT).show();\n            num++;\n        }\n        databaseAccess.close();\n    }\n\n    /*public void test(){\n\n        int [] subsidios = {10, 20, 0};\n        int [] M3 = {15, 19};\n        for(int i=0; i < subsidios.length; i++){\n            for(int e=0; e < M3.length; e++){\n                testCalculoCobro(M3[e], subsidios[i], 400, 2500);\n            }\n        }\n    }\n\n   public void testCalculoCobro(int metrosCubicos, int subsidioD, int valor_metro, int cargo_fijo ){\n        DatabaseAccess databaseAccess = DatabaseAccess.getInstance(getApplicationContext());\n        databaseAccess.open();\n\n        Log.i(\"cal-M3: \",String.valueOf(metrosCubicos));\n        Log.i(\"cal-Subsidio: \",String.valueOf(subsidioD));\n\n        int subsidioMayor = cargo_fijo +  (15 * 400); //8500\n        int subsidioMenor = subsidioMayor / 2;//4250\n\n        if(subsidioD == 10) {\n            if (metrosCubicos <= 15) {\n                int cobro = (metrosCubicos * valor_metro + cargo_fijo) / 2;\n                Log.i(\"cal-Resultado Calculo: \", String.valueOf(cobro));\n                Log.i(\"cal- \", \"**********************\");\n                if (cobro < 0) {\n                    cobro = 0;\n                    Log.i(\"cal-Resultado Calculo: \", String.valueOf(cobro));\n                    Log.i(\"cal- \", \"**********************\");\n                }\n            } else {\n                int cobro = (metrosCubicos * valor_metro + cargo_fijo) - subsidioMenor;\n                if (cobro < 0) {\n                    cobro = 0;\n                    Log.i(\"cal-Resultado Calculo: \", String.valueOf(cobro));\n                    Log.i(\"cal- \", \"**********************\");\n\n                } else {\n                    Log.i(\"cal-Resultado Calculo: \", String.valueOf(cobro));\n                    Log.i(\"cal- \", \"**********************\");\n                }\n            }\n        }else if(subsidioD == 20){\n            int cobro = (metrosCubicos * valor_metro + cargo_fijo) - subsidioMayor;\n            if(cobro < 0){\n                cobro =0;\n                Log.i(\"cal-Resultado Calculo: \", String.valueOf(cobro));\n                Log.i(\"cal- \", \"**********************\");\n            }else {\n                Log.i(\"cal-Resultado Calculo: \", String.valueOf(cobro));\n                Log.i(\"cal- \", \"**********************\");\n            }\n        }else{\n            int cobro = metrosCubicos * valor_metro + cargo_fijo;\n            Log.i(\"cal-Resultado Calculo: \", String.valueOf(cobro));\n            Log.i(\"cal- \", \"**********************\");\n        }\n    }*/\n\n    public void testInsertarCobro(){\n        DatabaseAccess databaseAccess = DatabaseAccess.getInstance(getApplicationContext());\n        databaseAccess.open();\n\n        int[] cobros= {4000,4250,5000,0,3000,1000,2370,4500,8500,7000};\n        String[] mdidores= {\"1111\", \"2222\",\"3333\",\"4444\",\"5555\",\"6666\",\"7777\",\"8888\",\"9999\",\"1000\"};\n\n        int cont=1;\n        for(int i=0; i < cobros.length; i++ ){\n            Log.i(\"Ins- Cobro: \", String.valueOf(cobros[i]));\n            Log.i(\"Ins- Medidor: \", mdidores[i]);\n            //Inserción de cobro en base de datos\n            databaseAccess.insertarCobro(cobros[i], mdidores[i]);\n\n            //Verificación de cobro insertado\n            String [] datos = databaseAccess.getRegistros(cont);\n            Log.i(\"Ins- Cobro en BBDD: \", datos[3]);\n            Log.i(\"Ins-\", \"*********************\");\n\n            cont++;\n        }\n    }\n\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/miapr/RegistrarDatosMedidor.java	(revision 56ef15d6df4887de4d4c62982f53aad6cfc4e035)
+++ app/src/main/java/com/example/miapr/RegistrarDatosMedidor.java	(date 1620012827000)
@@ -484,15 +484,15 @@
 
         int cont=1;
         for(int i=0; i < cobros.length; i++ ){
-            Log.i("Ins- Cobro: ", String.valueOf(cobros[i]));
-            Log.i("Ins- Medidor: ", mdidores[i]);
+            //Log.i("Ins- Cobro: ", String.valueOf(cobros[i]));
+            //Log.i("Ins- Medidor: ", mdidores[i]);
             //Inserción de cobro en base de datos
             databaseAccess.insertarCobro(cobros[i], mdidores[i]);
 
             //Verificación de cobro insertado
             String [] datos = databaseAccess.getRegistros(cont);
-            Log.i("Ins- Cobro en BBDD: ", datos[3]);
-            Log.i("Ins-", "*********************");
+//            Log.i("Ins- Cobro en BBDD: ", datos[3]);
+//            Log.i("Ins-", "*********************");
 
             cont++;
         }
